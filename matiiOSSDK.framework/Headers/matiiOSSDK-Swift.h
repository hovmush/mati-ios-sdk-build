// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSURLSession;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;

SWIFT_CLASS("_TtC10matiiOSSDK10APIManager")
@interface APIManager : NSObject <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(enum NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10matiiOSSDK16AnalyticsManager")
@interface AnalyticsManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull onboardingSwipe;)
+ (NSString * _Nonnull)onboardingSwipe;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull gotItClick;)
+ (NSString * _Nonnull)gotItClick;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull faceTrainGetStartedClicked;)
+ (NSString * _Nonnull)faceTrainGetStartedClicked;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull faceTrainSuccess;)
+ (NSString * _Nonnull)faceTrainSuccess;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull faceTrainCancel;)
+ (NSString * _Nonnull)faceTrainCancel;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull smsVerifySendClick;)
+ (NSString * _Nonnull)smsVerifySendClick;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull verificationSmsSent;)
+ (NSString * _Nonnull)verificationSmsSent;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull verificationSmsCancelled;)
+ (NSString * _Nonnull)verificationSmsCancelled;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankSelected;)
+ (NSString * _Nonnull)bankSelected;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankSearched;)
+ (NSString * _Nonnull)bankSearched;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankLogin;)
+ (NSString * _Nonnull)bankLogin;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankMfaEntered;)
+ (NSString * _Nonnull)bankMfaEntered;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankAccountNumberEntered;)
+ (NSString * _Nonnull)bankAccountNumberEntered;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankVerifyManuallyClick;)
+ (NSString * _Nonnull)bankVerifyManuallyClick;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bankUserInfoSubmited;)
+ (NSString * _Nonnull)bankUserInfoSubmited;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull profilePageOpened;)
+ (NSString * _Nonnull)profilePageOpened;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull editProfilePageOpened;)
+ (NSString * _Nonnull)editProfilePageOpened;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull updateProfileClick;)
+ (NSString * _Nonnull)updateProfileClick;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull paySelected;)
+ (NSString * _Nonnull)paySelected;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull requestSelected;)
+ (NSString * _Nonnull)requestSelected;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull payOpened;)
+ (NSString * _Nonnull)payOpened;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull requestOpened;)
+ (NSString * _Nonnull)requestOpened;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contactSelected;)
+ (NSString * _Nonnull)contactSelected;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contactSearch;)
+ (NSString * _Nonnull)contactSearch;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull paySuccess;)
+ (NSString * _Nonnull)paySuccess;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull payCancel;)
+ (NSString * _Nonnull)payCancel;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull requestSuccess;)
+ (NSString * _Nonnull)requestSuccess;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull requestCancel;)
+ (NSString * _Nonnull)requestCancel;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull faceVerificationSuccess;)
+ (NSString * _Nonnull)faceVerificationSuccess;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull faceVerificationFailed;)
+ (NSString * _Nonnull)faceVerificationFailed;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull notificationsOpened;)
+ (NSString * _Nonnull)notificationsOpened;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull payMerchantShown;)
+ (NSString * _Nonnull)payMerchantShown;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull payMerchantSuccess;)
+ (NSString * _Nonnull)payMerchantSuccess;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull payMerchantFailed;)
+ (NSString * _Nonnull)payMerchantFailed;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull quickPayClicked;)
+ (NSString * _Nonnull)quickPayClicked;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull notificationsPayClicked;)
+ (NSString * _Nonnull)notificationsPayClicked;
+ (void)trackWithEvent:(NSString * _Nullable)event properties:(NSDictionary<NSString *, id> * _Nullable)properties;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

SWIFT_CLASS("_TtC10matiiOSSDK4Bank")
@interface Bank : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable objectId;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable fields;
@property (nonatomic, copy) NSData * _Nullable logoData;
@property (nonatomic, copy) NSData * _Nullable logoLarge;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull products;
- (void)makeWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10matiiOSSDK16BankRootDelegate_")
@protocol BankRootDelegate
- (void)bankAccountAddedWithToken:(NSString * _Nullable)token;
- (void)bankAccountCancelled;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10matiiOSSDK22BankRootViewController")
@interface BankRootViewController : UIViewController <UITextFieldDelegate>
@property (nonatomic, strong) id <BankRootDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nullable authorization;
@property (nonatomic, copy) NSString * _Nullable rootURL;
@property (nonatomic) BOOL isInfoAvailableInApp;
@property (nonatomic, copy) NSArray<Bank *> * _Nonnull banks;
@property (nonatomic) BOOL isFromMati;
@property (nonatomic, strong) APIManager * _Nonnull apiManager;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

SWIFT_CLASS("_TtC10matiiOSSDK12DeviceSignal")
@interface DeviceSignal : NSObject <NSURLSessionDelegate>
- (void)registerTextFieldWithTextField:(UITextField * _Nonnull)textField;
- (void)registerScreenWithName:(NSString * _Nonnull)name;
- (void)addTransferSignalWithTransferId:(NSString * _Nonnull)transferId authorization:(NSString * _Nonnull)authorization;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(enum NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ShopItem;

SWIFT_CLASS("_TtC10matiiOSSDK4Mati")
@interface Mati : NSObject
+ (void)registerWithMerchant:(NSString * _Nonnull)merchant;
+ (void)openURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nonnull)options;
+ (void)setInfo:(NSString * _Nonnull)info;
+ (void)addShopItemWithName:(NSString * _Nonnull)name price:(float)price quantity:(NSInteger)quantity;
+ (void)addShopItem:(ShopItem * _Nonnull)shopItem;
+ (void)addShopItems:(NSArray<ShopItem *> * _Nonnull)shopItems;
+ (void)setShopItems:(NSArray<ShopItem *> * _Nullable)shopItems;
+ (void)removeShopItems;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol MatiDelegate;
enum MatiButtonStyle : NSInteger;

SWIFT_CLASS("_TtC10matiiOSSDK10MatiButton")
@interface MatiButton : UIView <UITextFieldDelegate, BankRootDelegate>
@property (nonatomic, strong) id <MatiDelegate> _Nullable delegate;
@property (nonatomic) enum MatiButtonStyle style;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (MatiButton * _Nonnull)matiButtonWithStyle:(enum MatiButtonStyle)style;
- (void)layoutSubviews;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string;
- (void)bankAccountAddedWithToken:(NSString * _Nullable)token;
- (void)bankAccountCancelled;
@end

typedef SWIFT_ENUM(NSInteger, MatiButtonStyle) {
  MatiButtonStyleDark = 0,
  MatiButtonStyleLight = 1,
};


SWIFT_PROTOCOL("_TtP10matiiOSSDK12MatiDelegate_")
@protocol MatiDelegate
- (void)payCompleteWithMatiButton:(MatiButton * _Nonnull)matiButton;
- (void)payCancelledWithMatiButton:(MatiButton * _Nonnull)matiButton;
@end


SWIFT_CLASS("_TtC10matiiOSSDK20PhoneNumberFormatter")
@interface PhoneNumberFormatter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)formatNumberWithText:(NSString * _Nonnull)text replacementString:(NSString * _Nonnull)replacementString;
@end


SWIFT_CLASS("_TtC10matiiOSSDK6Roboto")
@interface Roboto : NSObject
+ (void)registerFonts;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10matiiOSSDK8ShopItem")
@interface ShopItem : NSObject
+ (ShopItem * _Nonnull)shopItemWithName:(NSString * _Nonnull)name price:(float)price quantity:(NSInteger)quantity;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(matiiOSSDK))
+ (UIColor * _Nonnull)primary;
@end


@interface UIColor (SWIFT_EXTENSION(matiiOSSDK))
@end


@interface UIDevice (SWIFT_EXTENSION(matiiOSSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull modelName;
@end


@interface UIFont (SWIFT_EXTENSION(matiiOSSDK))
+ (UIFont * _Null_unspecified)robotoFontOfSizeWithSize:(CGFloat)size;
+ (UIFont * _Null_unspecified)robotoMediumFontOfSizeWithSize:(CGFloat)size;
@end


@interface UIView (SWIFT_EXTENSION(matiiOSSDK))
- (CGPoint)viewOrigin;
- (void)setViewOriginWithNewOrigin:(CGPoint)newOrigin;
- (CGSize)viewSize;
- (void)setViewSizeWithNewSize:(CGSize)newSize;
- (CGFloat)x;
- (void)setXWithNewX:(CGFloat)newX;
- (CGFloat)y;
- (void)setYWithNewY:(CGFloat)newY;
- (CGFloat)height;
- (void)setHeightWithNewHeight:(CGFloat)newHeight;
- (CGFloat)width;
- (void)setWidthWithNewWidth:(CGFloat)newWidth;
- (CGFloat)left;
- (void)setLeftWithLeft:(CGFloat)left;
- (CGFloat)right;
- (void)setRightWithRight:(CGFloat)right;
- (CGFloat)top;
- (void)setTopWithTop:(CGFloat)top;
- (CGFloat)bottom;
- (void)setBottomWithBottom:(CGFloat)bottom;
- (void)setCenterWithNewCenter:(CGPoint)newCenter;
- (CGPoint)middlePoint;
- (CGFloat)middleX;
- (CGFloat)middleY;
@end

#pragma clang diagnostic pop
